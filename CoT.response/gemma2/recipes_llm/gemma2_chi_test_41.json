[
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Facility Type",
        "expression": "value",
        "edits": [
            {
                "from": [
                    "Restaurant"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Restaurants"
            },
            {
                "from": [
                    "Grocery Store"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Grocery Stores"
            }
        ],
        "description": "Mass edit cells in column Facility Type"
    },
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Facility Type",
        "expression": "value",
        "edits": [
            {
                "from": [
                    "Restaurants"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Restaurant"
            },
            {
                "from": [
                    "Grocery Stores"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Grocery Store"
            }
        ],
        "description": "Mass edit cells in column Facility Type"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Risk",
        "expression": "jython:\nimport re\nif match := re.search(r'Risk (\\d)', value):\n  return int(match.group(1))\nelse:\n  return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column Risk using expression jython:\nimport re\nif match := re.search(r'Risk (\\d)', value):\n  return int(match.group(1))\nelse:\n  return value\nreturn value"
    }
]