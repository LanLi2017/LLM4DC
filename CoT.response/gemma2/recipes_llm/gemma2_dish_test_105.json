[
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "value.trim()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column name using expression value.trim()"
    },
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "value",
        "edits": [
            {
                "from": [
                    "Sliced London Broil au jus"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "London Broil"
            },
            {
                "from": [
                    "[Cigars, Manuel Garcia, Invencible]"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Cigars"
            },
            {
                "from": [
                    "SAVENNIERES, Chateau de Chamboureau"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Savennieres"
            },
            {
                "from": [
                    "Canada mutton chop"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Mutton Chop"
            },
            {
                "from": [
                    "1952 Zeltinger Himmelreich, Spatlese,   naturrein, Wachstum Bernhard Scheer, Originalkellerabzug, Korkbrand;"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Zeltinger Himmelreich"
            },
            {
                "from": [
                    "BEEF BOURGUIGNONNE - Cubes of beef prepared with onions and Burgundy wine"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Beef Bourguignon"
            },
            {
                "from": [
                    "Roast fancy capon, celery dressing, compote"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Roast Capon"
            },
            {
                "from": [
                    "Kalbfleisch Fricassee"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Kalbfleisch Fricassee"
            },
            {
                "from": [
                    "Toasted Rolls with with a small pitcher of cream and with Butter"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Toasted Rolls"
            },
            {
                "from": [
                    "Chinese Mushrooms and Pork Chow Mein (Pan Fried Noodles, Soft or Crisp)"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Pork Chow Mein"
            },
            {
                "from": [
                    "Tomato, Stuffed a la Meyer (1)"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Stuffed Tomato"
            },
            {
                "from": [
                    "Lexington Appetizer"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Lexington Appetizer"
            },
            {
                "from": [
                    "Bowl of Cold Rice and Milk"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Rice and Milk"
            },
            {
                "from": [
                    "Fried filet of English sole, sauce Verte, Julienne potatoes"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Fried Sole"
            },
            {
                "from": [
                    "Grenadine Cocktail"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Grenadine Cocktail"
            },
            {
                "from": [
                    "Johannisbeersaft"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Johannisbeersaft"
            }
        ],
        "description": "Mass edit cells in column name"
    },
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "value",
        "edits": [
            {
                "from": [
                    "Baked Fresh Mackerel, [Creole]"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Baked Fresh Mackerel"
            },
            {
                "from": [
                    "Boiled Smoked (ox-tongue)"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Boiled Smoked Ox-Tongue"
            },
            {
                "from": [
                    "Artichauts a la Russe"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Artichauts a la Russe"
            },
            {
                "from": [
                    "Vermouth, franz"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Vermouth"
            },
            {
                "from": [
                    "Fish cakes, with one fried egg, and coffee, tea or cocoa"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Fish Cakes"
            },
            {
                "from": [
                    "Munchner Sauerkrautplatte reich garniert"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Munchner Sauerkrautplatte"
            },
            {
                "from": [
                    "california fresh FRUit SALAD, with Cottage Cheese, Sour Cream"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "California Fresh Fruit Salad"
            },
            {
                "from": [
                    "Bacon with eggs"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Bacon and Eggs"
            },
            {
                "from": [
                    "Grenadine Cocktail"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Grenadine Cocktail"
            },
            {
                "from": [
                    "Flannel Cakes with Genuine Maple Syrup"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Flannel Cakes"
            },
            {
                "from": [
                    "Ice cream - Pappagallo's speciality"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Ice Cream"
            }
        ],
        "description": "Mass edit cells in column name"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "jython:import re\nif re.search(r'^(?!.*[A-Za-z]).*$', value):\n  return ''\nelse:\n  return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column name using expression jython:import re\nif re.search(r'^(?!.*[A-Za-z]).*$', value):\n  return ''\nelse:\n  return value\nreturn value"
    },
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "value",
        "edits": [
            {
                "from": [
                    "California Fresh Fruit Salad",
                    "Grenadine Cocktail",
                    "Stuffed Tomato",
                    "Bacon and Eggs",
                    "Pork Chow Mein",
                    "Rice and Milk",
                    "Artichauts a la Russe",
                    "Cigars",
                    "Ice Cream   and Ices, Coffee",
                    "Zeltinger Himmelreich",
                    "coffee,   per pot or Cup",
                    "Tomme de Savoie Cheese",
                    "Boiled Smoked Ox-Tongue",
                    "Vermouth Noilly Prat ou Turin",
                    "London Broil",
                    "Vermouth",
                    "Ice Cream",
                    "Munchner     Sauerkrautplatte reich garniert",
                    "Oyster Mornay (6)",
                    "Strawberry, peach or raspberry jam"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Dish"
            }
        ],
        "description": "Mass edit cells in column name"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "times_appeared",
        "expression": "value.toNumber()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column times_appeared using expression value.toNumber()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "lowest_price",
        "expression": "value.toNumber()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column lowest_price using expression value.toNumber()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "lowest_price",
        "expression": "value.toNumber()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column lowest_price using expression value.toNumber()"
    }
]