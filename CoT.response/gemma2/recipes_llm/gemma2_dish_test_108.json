[
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "value",
        "edits": [
            {
                "from": [
                    "[Bread] and Butter: White"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Bread and Butter"
            },
            {
                "from": [
                    "Individual Wedding Cakes for Everybody"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Wedding Cake"
            },
            {
                "from": [
                    "Roast Hot House Baby Lamb, Mint Sauce"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Roast Lamb"
            },
            {
                "from": [
                    "   Souther Colada - Southern comfort, Ananassaft, Kokosnu\u00dfcreme"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Southern Colada"
            },
            {
                "from": [
                    "Tenderloin steak, with truffles"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Tenderloin Steak"
            },
            {
                "from": [
                    "Strawberry, peach or raspberry jam"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Jam"
            },
            {
                "from": [
                    "Vintner's Sauterne"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Sauterne"
            },
            {
                "from": [
                    "California Fresh Fruit Salad, with Cottage Cheese, Sour Cream"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Fruit Salad"
            },
            {
                "from": [
                    "Unjointed Fried Half Spring Chicken on Toast, Country Gravy"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Fried Chicken"
            },
            {
                "from": [
                    "Schweserpasteten"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Schweserpasteten"
            },
            {
                "from": [
                    "saint-marceaux very dry"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Saint-Marceaux"
            },
            {
                "from": [
                    "Sweetbread Cutlets, Parisian fashion"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Sweetbread Cutlets"
            },
            {
                "from": [
                    "fr Ochsenbrust \"Flamisch\" mit Bouillonkartoffeln und Sahnemeerrettich"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Ochsenbrust"
            },
            {
                "from": [
                    "Broiled Sweetbreads, green [peas]"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Sweetbreads"
            },
            {
                "from": [
                    "Selected Delicacies From Various Countries"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Delicacies"
            },
            {
                "from": [
                    "Chateau Latour Blanche B. & G. Sauternes"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Chateau Latour"
            },
            {
                "from": [
                    "Cream Caroline soup"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Caroline Soup"
            },
            {
                "from": [
                    "Frecciarossa;"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Frecciarossa"
            },
            {
                "from": [
                    "Broiled or Fried Green Bluefish"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Bluefish"
            },
            {
                "from": [
                    "Sunomono"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Sunomono"
            }
        ],
        "description": "Mass edit cells in column name"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "jython:import re\nreturn re.sub(r'\\([^)]*\\)|\\[[^\\]]*\\]|\\{[^}]*\\}|;|:|\\s{2,}', ' ', value).strip()\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column name using expression jython:import re\nreturn re.sub(r'\\([^)]*\\)|\\[[^\\]]*\\]|\\{[^}]*\\}|;|:|\\s{2,}', ' ', value).strip()\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "jython:import re\nreturn re.sub(r'\\([^)]*\\)|[^a-zA-Z\\s]+', '', value).strip()\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column name using expression jython:import re\nreturn re.sub(r'\\([^)]*\\)|[^a-zA-Z\\s]+', '', value).strip()\nreturn value"
    },
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "value",
        "edits": [
            {
                "from": [
                    "SaintMarceaux"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Saint-Marceaux"
            },
            {
                "from": [
                    "er Ockfener Beckstein"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Ockfener Beckstein"
            },
            {
                "from": [
                    "Bourbon whisky Four Roses  cl"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Four Roses Bourbon"
            },
            {
                "from": [
                    "Kalbsschnitzel mit braunem Knoblauch Tomatennudeln und Salat  Escalope de veau gousse dail avec nouilles aux herbes et salade  Excalope of veal with garlic noodles with herbs and salad"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Wiener Schnitzel"
            },
            {
                "from": [
                    "Boiled Fresh Brisket of Beef Horseradish Sauce Bouillon Potatoes"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Boiled Brisket"
            },
            {
                "from": [
                    "Ochsenbrust"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Ox Breast"
            },
            {
                "from": [
                    "Tetrazini"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Tetrazini"
            },
            {
                "from": [
                    "Consomme Belle Fermiere"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Consomme"
            },
            {
                "from": [
                    "Bluefort Cheese and"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Bluefort Cheese"
            },
            {
                "from": [
                    "Malteser"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Maltesers"
            },
            {
                "from": [
                    "Creme dAsperges Nouvelles aux Fleurons"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Asparagus Cream Soup"
            },
            {
                "from": [
                    "Unjointed Fried Half Spring Chicken on Toast Country Gravy"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Fried Chicken"
            },
            {
                "from": [
                    "Schweserpasteten"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Schweserpasteten"
            },
            {
                "from": [
                    "Frecciarossa"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Frecciarossa"
            },
            {
                "from": [
                    "Souther Colada  Southern comfort Ananassaft Kokosnucreme"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Southern Comfort Cocktail"
            }
        ],
        "description": "Mass edit cells in column name"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column name using expression value.toUppercase()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "lowest_price",
        "expression": "value.toNumber()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column lowest_price using expression value.toNumber()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "highest_price",
        "expression": "value.toNumber()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column highest_price using expression value.toNumber()"
    }
]