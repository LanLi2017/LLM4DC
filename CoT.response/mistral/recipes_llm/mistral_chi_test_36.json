[
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "DBA Name",
        "expression": "jython:import re\n   if value.startswith(\"7-ELEVEN\"):\n       return \"7-Eleven\"\n   elif re.search(r'\\d', value):\n       return re.sub(r'\\D+(\\d+)\\D+', r'\\1', value)\n   elif re.search(r'[^a-zA-Z\\s]', value):\n       return re.sub(r'[^a-zA-Z\\s]', '', value).strip()\n   else:\n       return value.title()\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column DBA Name using expression jython:import re\n   if value.startswith(\"7-ELEVEN\"):\n       return \"7-Eleven\"\n   elif re.search(r'\\d', value):\n       return re.sub(r'\\D+(\\d+)\\D+', r'\\1', value)\n   elif re.search(r'[^a-zA-Z\\s]', value):\n       return re.sub(r'[^a-zA-Z\\s]', '', value).strip()\n   else:\n       return value.title()\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "DBA Name",
        "expression": "jython:import re\n   if re.search(r'^7\\-ELEVEN\\s*#\\s*\\d{5,6}B?$', value):\n       return '7-ELEVEN #' + value.split('#')[1].strip()\n   elif re.search(r'^7\\-ELEVEN\\s*#\\s*\\d{5,6}$', value):\n       return '7-ELEVEN #' + value.split('#')[0].strip()\n   elif re.search(r'^CAFE\\s*222\\s*LLC$', value):\n       return 'CAFE 222 LLC'\n   else:\n       return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column DBA Name using expression jython:import re\n   if re.search(r'^7\\-ELEVEN\\s*#\\s*\\d{5,6}B?$', value):\n       return '7-ELEVEN #' + value.split('#')[1].strip()\n   elif re.search(r'^7\\-ELEVEN\\s*#\\s*\\d{5,6}$', value):\n       return '7-ELEVEN #' + value.split('#')[0].strip()\n   elif re.search(r'^CAFE\\s*222\\s*LLC$', value):\n       return 'CAFE 222 LLC'\n   else:\n       return value\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "DBA Name",
        "expression": "jython:import re\n   if re.search(r'^7\\-ELEVEN\\s*#', value):\n      return value.replace('7-ELEVEN ', '7-Eleven ').replace('#', '')\n   elif re.search(r'^7\\-Eleven\\s*#', value):\n      return value.replace('7-Eleven ', '7-Eleven ').replace('#', '')\n   elif re.search(r'^\\s*7\\-ELEVEN\\s*#', value):\n      return value.replace('7-ELEVEN ', '7-Eleven ').replace('#', '')\n   elif re.search(r'^\\s*7\\-eleven\\s*#', value):\n      return value.replace('7-eleven ', '7-eleven ').replace('#', '')\n   else:\n      return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column DBA Name using expression jython:import re\n   if re.search(r'^7\\-ELEVEN\\s*#', value):\n      return value.replace('7-ELEVEN ', '7-Eleven ').replace('#', '')\n   elif re.search(r'^7\\-Eleven\\s*#', value):\n      return value.replace('7-Eleven ', '7-Eleven ').replace('#', '')\n   elif re.search(r'^\\s*7\\-ELEVEN\\s*#', value):\n      return value.replace('7-ELEVEN ', '7-Eleven ').replace('#', '')\n   elif re.search(r'^\\s*7\\-eleven\\s*#', value):\n      return value.replace('7-eleven ', '7-eleven ').replace('#', '')\n   else:\n      return value\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "DBA Name",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column DBA Name using expression value.toUppercase()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "DBA Name",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column DBA Name using expression value.toUppercase()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "DBA Name",
        "expression": "value.trim()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column DBA Name using expression value.trim()"
    }
]