[
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "jython:import re\n   if re.search(r'\\s+', value):\n      value = value.replace(' ', '_')\n   if re.search(r'[A-Za-z]+ \\([A-Za-z]+\\)', value):\n      value = re.sub(r'[A-Za-z]+ \\([A-Za-z]+\\)', value.replace(' ', ''), value)\n   if re.search(r'\\[[A-Za-z]+\\]$', value):\n      value = re.sub(r'\\[[A-Za-z]+\\]$', '', value)\n   if re.search(r'[A-Za-z]+ \\([A-Za-z]+\\) \\([A-Za-z]+\\)', value):\n      value = re.sub(r'[A-Za-z]+ \\([A-Za-z]+\\) \\([A-Za-z]+\\)', value.replace(' ', ''), value)\n   if re.search(r'\\[[A-Za-z]+\\s+', value):\n      value = re.sub(r'\\[[A-Za-z]+\\s+', '', value)\n   if re.search(r'[A-Za-z]+ \\([A-Za-z]+\\)\\s+', value):\n      value = re.sub(r'[A-Za-z]+ \\([A-Za-z]+\\)\\s+', '', value)\n   if re.search(r'\\[[A-Za-z]+\\]\\s+', value):\n      value = re.sub(r'\\[[A-Za-z]+\\]\\s+', ' ', value)\n   return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column name using expression jython:import re\n   if re.search(r'\\s+', value):\n      value = value.replace(' ', '_')\n   if re.search(r'[A-Za-z]+ \\([A-Za-z]+\\)', value):\n      value = re.sub(r'[A-Za-z]+ \\([A-Za-z]+\\)', value.replace(' ', ''), value)\n   if re.search(r'\\[[A-Za-z]+\\]$', value):\n      value = re.sub(r'\\[[A-Za-z]+\\]$', '', value)\n   if re.search(r'[A-Za-z]+ \\([A-Za-z]+\\) \\([A-Za-z]+\\)', value):\n      value = re.sub(r'[A-Za-z]+ \\([A-Za-z]+\\) \\([A-Za-z]+\\)', value.replace(' ', ''), value)\n   if re.search(r'\\[[A-Za-z]+\\s+', value):\n      value = re.sub(r'\\[[A-Za-z]+\\s+', '', value)\n   if re.search(r'[A-Za-z]+ \\([A-Za-z]+\\)\\s+', value):\n      value = re.sub(r'[A-Za-z]+ \\([A-Za-z]+\\)\\s+', '', value)\n   if re.search(r'\\[[A-Za-z]+\\]\\s+', value):\n      value = re.sub(r'\\[[A-Za-z]+\\]\\s+', ' ', value)\n   return value\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "name",
        "expression": "jython:import re\n   match_dish = re.search(r'[A-Za-z]+', value)\n   if match_dish:\n      match_description = re.search(r'\\s+[A-Za-z, ]*', value)\n      if match_description:\n         value = match_dish.group(0).upper() + match_description.group(0).strip().lower()\n      else:\n         value = match_dish.group(0).upper()\n   elif re.search(r'\\[.*\\]$', value):\n      value = re.sub(r'\\[.*\\]', '', value)\n   elif re.search(r'[,]+', value):\n      value = re.sub(r'[,]+', ',', value)\n   elif re.search(r'\\s+$', value):\n      value = value.strip()\n   return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column name using expression jython:import re\n   match_dish = re.search(r'[A-Za-z]+', value)\n   if match_dish:\n      match_description = re.search(r'\\s+[A-Za-z, ]*', value)\n      if match_description:\n         value = match_dish.group(0).upper() + match_description.group(0).strip().lower()\n      else:\n         value = match_dish.group(0).upper()\n   elif re.search(r'\\[.*\\]$', value):\n      value = re.sub(r'\\[.*\\]', '', value)\n   elif re.search(r'[,]+', value):\n      value = re.sub(r'[,]+', ',', value)\n   elif re.search(r'\\s+$', value):\n      value = value.strip()\n   return value\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "first_appeared",
        "expression": "value.toNumber()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column first_appeared using expression value.toNumber()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "last_appeared",
        "expression": "value.toNumber()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column last_appeared using expression value.toNumber()"
    }
]