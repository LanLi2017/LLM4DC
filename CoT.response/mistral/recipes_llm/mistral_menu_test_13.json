[
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "sponsor",
        "expression": "jython:import re\n   if not re.search(r'\\$', value):\n      return value + ' (Accepts Dollars)'\n   else:\n      return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column sponsor using expression jython:import re\n   if not re.search(r'\\$', value):\n      return value + ' (Accepts Dollars)'\n   else:\n      return value\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "sponsor",
        "expression": "jython:import re\n   if re.search(r'\\s+', value):\n      value = value.strip()\n\n   if re.search(r'[A-Za-z]+ \\d+', value):\n      value = value.title() + ' Accepted'\n\n   elif re.search(r'\\b\\w{2,}\\b', value) and not re.search(r'\\d', value):\n      value += ' Not Accepted'\n\n   return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column sponsor using expression jython:import re\n   if re.search(r'\\s+', value):\n      value = value.strip()\n\n   if re.search(r'[A-Za-z]+ \\d+', value):\n      value = value.title() + ' Accepted'\n\n   elif re.search(r'\\b\\w{2,}\\b', value) and not re.search(r'\\d', value):\n      value += ' Not Accepted'\n\n   return value\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "sponsor",
        "expression": "jython:import re\n   if re.search(r'Western Pacific', value, re.IGNORECASE):\n       return 'Western Pacific'\n   elif re.search(r'cunard line', value, re.IGNORECASE):\n       return 'CUNARD LINE'\n   elif re.search(r'holland america cruises', value, re.IGNORECASE):\n       return 'Holland America Cruises'\n   elif re.search(r'fraternal union of anointed high priests of the state of new york', value, re.IGNORECASE):\n       return 'Fraternal Union of Anointed High Priests of the State of New York'\n   elif re.search(r'the biltmore', value, re.IGNORECASE):\n       return 'The Biltmore'\n   elif re.search(r'statler\\'s hotel and restaurant', value, re.IGNORECASE):\n       return 'Statler\u2019s Hotel and Restaurant'\n   elif re.search(r'waldorf astoria', value, re.IGNORECASE):\n       return 'Waldorf Astoria'\n   elif re.search(r'society sons of the revolution in the state of missouri', value, re.IGNORECASE):\n       return 'Society Sons of the Revolution in the State of Missouri'\n   elif re.search(r'hotel majestic', value, re.IGNORECASE):\n       return 'Hotel Majestic'\n   elif re.search(r'comstock room of the palace hotel', value, re.IGNORECASE):\n       return 'Comstock Room of The Palace Hotel'\n   elif re.search(r'casina delle rose & lucciola', value, re.IGNORECASE):\n       return 'Casina Delle Rose & Lucciola'\n   elif re.search(r'r\\.m\\.s parthia', value, re.IGNORECASE):\n       return 'R.M.S. Parthia'\n   elif re.search(r'astor house', value, re.IGNORECASE):\n       return 'Astor House'\n   elif re.search(r'southern pacific', value, re.IGNORECASE):\n       return 'Southern Pacific'\n   elif re.search(r'\\?', value):\n       return ''  # remove question mark if present\n   elif re.search(r'ss nieuw amsterdam', value, re.IGNORECASE):\n       return 'S.S. Nieuw Amsterdam'\n   elif re.search(r'ismailia temple', value, re.IGNORECASE):\n       return 'Ismailia Temple'\n   elif re.search(r'gardner & smith', value, re.IGNORECASE):\n       return 'Gardner & Smith'\n   elif re.search(r'hotel belvedere', value, re.IGNORECASE):\n       return 'Hotel Belvedere'\n   elif re.search(r'summit house', value, re.IGNORECASE):\n       return 'Summit House'\n   else:\n       return value  # if no match, keep the original value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column sponsor using expression jython:import re\n   if re.search(r'Western Pacific', value, re.IGNORECASE):\n       return 'Western Pacific'\n   elif re.search(r'cunard line', value, re.IGNORECASE):\n       return 'CUNARD LINE'\n   elif re.search(r'holland america cruises', value, re.IGNORECASE):\n       return 'Holland America Cruises'\n   elif re.search(r'fraternal union of anointed high priests of the state of new york', value, re.IGNORECASE):\n       return 'Fraternal Union of Anointed High Priests of the State of New York'\n   elif re.search(r'the biltmore', value, re.IGNORECASE):\n       return 'The Biltmore'\n   elif re.search(r'statler\\'s hotel and restaurant', value, re.IGNORECASE):\n       return 'Statler\u2019s Hotel and Restaurant'\n   elif re.search(r'waldorf astoria', value, re.IGNORECASE):\n       return 'Waldorf Astoria'\n   elif re.search(r'society sons of the revolution in the state of missouri', value, re.IGNORECASE):\n       return 'Society Sons of the Revolution in the State of Missouri'\n   elif re.search(r'hotel majestic', value, re.IGNORECASE):\n       return 'Hotel Majestic'\n   elif re.search(r'comstock room of the palace hotel', value, re.IGNORECASE):\n       return 'Comstock Room of The Palace Hotel'\n   elif re.search(r'casina delle rose & lucciola', value, re.IGNORECASE):\n       return 'Casina Delle Rose & Lucciola'\n   elif re.search(r'r\\.m\\.s parthia', value, re.IGNORECASE):\n       return 'R.M.S. Parthia'\n   elif re.search(r'astor house', value, re.IGNORECASE):\n       return 'Astor House'\n   elif re.search(r'southern pacific', value, re.IGNORECASE):\n       return 'Southern Pacific'\n   elif re.search(r'\\?', value):\n       return ''  # remove question mark if present\n   elif re.search(r'ss nieuw amsterdam', value, re.IGNORECASE):\n       return 'S.S. Nieuw Amsterdam'\n   elif re.search(r'ismailia temple', value, re.IGNORECASE):\n       return 'Ismailia Temple'\n   elif re.search(r'gardner & smith', value, re.IGNORECASE):\n       return 'Gardner & Smith'\n   elif re.search(r'hotel belvedere', value, re.IGNORECASE):\n       return 'Hotel Belvedere'\n   elif re.search(r'summit house', value, re.IGNORECASE):\n       return 'Summit House'\n   else:\n       return value  # if no match, keep the original value\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "sponsor",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column sponsor using expression value.toUppercase()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "sponsor",
        "expression": "jython:import re\n   match_dollar = re.search(r'\\$', value)\n   if match_dollar:\n      value_dollar = 'Dollars'\n   else:\n      value_dollar = 'Not Dollars'\n\n   # Standardize the spellings of sponsors\n   match_longfelow = re.search(r'LONGFELLOW', value, re.IGNORECASE)\n   if match_longfelow:\n      value = 'Longfellow'\n\n   match_colonial = re.search(r'COLONIAL HOTEL', value, re.IGNORECASE)\n   if match_colonial:\n      value = 'Colonial Hotel'\n\n   match_detroit = re.search(r'DETROIT BOARD OF COMMERCE', value, re.IGNORECASE)\n   if match_detroit:\n      value = 'Detroit Board of Commerce'\n\n   match_four_seasons = re.search(r'THE FOUR SEASONS', value, re.IGNORECASE)\n   if match_four_seasons:\n      value = 'Four Seasons'\n\n   match_hamburg = re.search(r'HAMBURG-AMERIKA LINIE', value, re.IGNORECASE)\n   if match_hamburg:\n      value = 'Hamburg-America Line'\n\n   match_adams = re.search(r'ADAMS\\' RESTAURANT', value, re.IGNORECASE)\n   if match_adams:\n      value = 'Adams Restaurant'\n\n   match_waldorf = re.search(r'WALDORF ASTORIA', value, re.IGNORECASE)\n   if match_waldorf:\n      value = 'Waldorf Astoria'\n\n   match_restaurant_name_location = re.search(r'\\[RESTAURANT NAME AND/OR LOCATION NOT GIVEN\\]', value, re.IGNORECASE)\n   if match_restaurant_name_location:\n      value = 'Restaurant Name and Location Not Given'\n\n   match_comstock = re.search(r'COMSTOCK ROOM OF THE PALACE HOTEL', value, re.IGNORECASE)\n   if match_comstock:\n      value = 'Comstock Room of the Palace Hotel'\n\n   match_mouquin = re.search(r'\\THE MOUQUIN RESTAURANT AND WINE CO\\.', value, re.IGNORECASE)\n   if match_mouquin:\n      value = 'Mouquin Restaurant and Wine Co.'\n\n   match_holland = re.search(r'HOLLAND SOCIETY', value, re.IGNORECASE)\n   if match_holland:\n      value = 'Holland Society'\n\n   match_usms = re.search(r'USMS', value, re.IGNORECASE)\n   if match_usms:\n      value = 'U.S.M.S.'\n\n   match_southern_pacific = re.search(r'SOUTHERN PACIFIC', value, re.IGNORECASE)\n   if match_southern_pacific:\n      value = 'Southern Pacific'\n\n   match_pennsylvania = re.search(r'PENNSYLVANIA RAILROAD', value, re.IGNORECASE)\n   if match_pennsylvania:\n      value = 'Pennsylvania Railroad'\n\n   match_ss_nieuw_amsterdam = re.search(r'S\\.S\\. NIEUW AMSTERDAM', value, re.IGNORECASE)\n   if match_ss_nieuw_amsterdam:\n      value = 'S.S. Nieuw Amsterdam'\n\n   match_coffee_house = re.search(r'COFFEE HOUSE', value, re.IGNORECASE)\n   if match_coffee_house:\n      value = 'Coffee House'\n\n   match_hotel_brevoort = re.search(r'HOTEL BREVOORT', value, re.IGNORECASE)\n   if match_hotel_brevoort:\n      value = 'Hotel Brevoort'\n\n   match_kaiserhof = re.search(r'KAISERHOF', value, re.IGNORECASE)\n   if match_kaiserhof:\n      value = 'Kaiserhof'\n\n   match_seaboard = re.search(r'SEABOARD RAILWAY', value, re.IGNORECASE)\n   if match_seaboard:\n      value = 'Seaboard Railway'\n\n   match_pennsylvania_railroad = re.search(r'PENNSYLVANIA RAILROAD', value, re.IGNORECASE)\n   if match_pennsylvania_railroad:\n      value = 'Pennsylvania Railroad'\n\n   match_coffee_house = re.search(r'COFFEE HOUSE', value, re.IGNORECASE)\n   if match_coffee_house:\n      value = 'Coffee House'\n\n   match_hotel_brevoort = re.search(r'HOTEL BREVOORT', value, re.IGNORECASE)\n   if match_hotel_brevoort:\n      value = 'Hotel Brevoort'\n\n   match_kaiserhof = re.search(r'KAISERHOF', value, re.IGNORECASE)\n   if match_kaiserhof:\n      value = 'Kaiserhof'\n\n   return value + ', ' + value_dollar\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column sponsor using expression jython:import re\n   match_dollar = re.search(r'\\$', value)\n   if match_dollar:\n      value_dollar = 'Dollars'\n   else:\n      value_dollar = 'Not Dollars'\n\n   # Standardize the spellings of sponsors\n   match_longfelow = re.search(r'LONGFELLOW', value, re.IGNORECASE)\n   if match_longfelow:\n      value = 'Longfellow'\n\n   match_colonial = re.search(r'COLONIAL HOTEL', value, re.IGNORECASE)\n   if match_colonial:\n      value = 'Colonial Hotel'\n\n   match_detroit = re.search(r'DETROIT BOARD OF COMMERCE', value, re.IGNORECASE)\n   if match_detroit:\n      value = 'Detroit Board of Commerce'\n\n   match_four_seasons = re.search(r'THE FOUR SEASONS', value, re.IGNORECASE)\n   if match_four_seasons:\n      value = 'Four Seasons'\n\n   match_hamburg = re.search(r'HAMBURG-AMERIKA LINIE', value, re.IGNORECASE)\n   if match_hamburg:\n      value = 'Hamburg-America Line'\n\n   match_adams = re.search(r'ADAMS\\' RESTAURANT', value, re.IGNORECASE)\n   if match_adams:\n      value = 'Adams Restaurant'\n\n   match_waldorf = re.search(r'WALDORF ASTORIA', value, re.IGNORECASE)\n   if match_waldorf:\n      value = 'Waldorf Astoria'\n\n   match_restaurant_name_location = re.search(r'\\[RESTAURANT NAME AND/OR LOCATION NOT GIVEN\\]', value, re.IGNORECASE)\n   if match_restaurant_name_location:\n      value = 'Restaurant Name and Location Not Given'\n\n   match_comstock = re.search(r'COMSTOCK ROOM OF THE PALACE HOTEL', value, re.IGNORECASE)\n   if match_comstock:\n      value = 'Comstock Room of the Palace Hotel'\n\n   match_mouquin = re.search(r'\\THE MOUQUIN RESTAURANT AND WINE CO\\.', value, re.IGNORECASE)\n   if match_mouquin:\n      value = 'Mouquin Restaurant and Wine Co.'\n\n   match_holland = re.search(r'HOLLAND SOCIETY', value, re.IGNORECASE)\n   if match_holland:\n      value = 'Holland Society'\n\n   match_usms = re.search(r'USMS', value, re.IGNORECASE)\n   if match_usms:\n      value = 'U.S.M.S.'\n\n   match_southern_pacific = re.search(r'SOUTHERN PACIFIC', value, re.IGNORECASE)\n   if match_southern_pacific:\n      value = 'Southern Pacific'\n\n   match_pennsylvania = re.search(r'PENNSYLVANIA RAILROAD', value, re.IGNORECASE)\n   if match_pennsylvania:\n      value = 'Pennsylvania Railroad'\n\n   match_ss_nieuw_amsterdam = re.search(r'S\\.S\\. NIEUW AMSTERDAM', value, re.IGNORECASE)\n   if match_ss_nieuw_amsterdam:\n      value = 'S.S. Nieuw Amsterdam'\n\n   match_coffee_house = re.search(r'COFFEE HOUSE', value, re.IGNORECASE)\n   if match_coffee_house:\n      value = 'Coffee House'\n\n   match_hotel_brevoort = re.search(r'HOTEL BREVOORT', value, re.IGNORECASE)\n   if match_hotel_brevoort:\n      value = 'Hotel Brevoort'\n\n   match_kaiserhof = re.search(r'KAISERHOF', value, re.IGNORECASE)\n   if match_kaiserhof:\n      value = 'Kaiserhof'\n\n   match_seaboard = re.search(r'SEABOARD RAILWAY', value, re.IGNORECASE)\n   if match_seaboard:\n      value = 'Seaboard Railway'\n\n   match_pennsylvania_railroad = re.search(r'PENNSYLVANIA RAILROAD', value, re.IGNORECASE)\n   if match_pennsylvania_railroad:\n      value = 'Pennsylvania Railroad'\n\n   match_coffee_house = re.search(r'COFFEE HOUSE', value, re.IGNORECASE)\n   if match_coffee_house:\n      value = 'Coffee House'\n\n   match_hotel_brevoort = re.search(r'HOTEL BREVOORT', value, re.IGNORECASE)\n   if match_hotel_brevoort:\n      value = 'Hotel Brevoort'\n\n   match_kaiserhof = re.search(r'KAISERHOF', value, re.IGNORECASE)\n   if match_kaiserhof:\n      value = 'Kaiserhof'\n\n   return value + ', ' + value_dollar\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "sponsor",
        "expression": "jython:import re\n   match = re.search(r'\\b([A-Za-z]+) ([A-Za-z]+)\\b', value)\n   if match:\n      return match.group(1).lower() + ' ' + match.group(2).capitalize()\n   elif re.search(r'([A-Za-z]+)', value):\n      return value.lower()\n   else:\n      return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column sponsor using expression jython:import re\n   match = re.search(r'\\b([A-Za-z]+) ([A-Za-z]+)\\b', value)\n   if match:\n      return match.group(1).lower() + ' ' + match.group(2).capitalize()\n   elif re.search(r'([A-Za-z]+)', value):\n      return value.lower()\n   else:\n      return value\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "location_type",
        "expression": "jython:import re\n   if re.search(r'Dollar|USD|dollar|usd', value):\n      return 'Sponsor'\n   elif re.search(r'sponsorship|donation|contribution', value):\n      return 'Potential Sponsor'\n   elif re.search(r'charity|non-profit|foundation', value):\n      return 'Non-Profit Organization'\n   elif re.search(r'government|state|city|municipality|local', value):\n      return 'Government Entity'\n   else:\n      return 'Other'\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column location_type using expression jython:import re\n   if re.search(r'Dollar|USD|dollar|usd', value):\n      return 'Sponsor'\n   elif re.search(r'sponsorship|donation|contribution', value):\n      return 'Potential Sponsor'\n   elif re.search(r'charity|non-profit|foundation', value):\n      return 'Non-Profit Organization'\n   elif re.search(r'government|state|city|municipality|local', value):\n      return 'Government Entity'\n   else:\n      return 'Other'\nreturn value"
    },
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "currency",
        "expression": "value",
        "edits": [
            {
                "from": [
                    "Deutsche Marks"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Dollars"
            }
        ],
        "description": "Mass edit cells in column currency"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "currency_symbol",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column currency_symbol using expression value.toUppercase()"
    }
]