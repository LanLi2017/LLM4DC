[
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "sponsor",
        "expression": "jython:import re\n   match1 = re.search(r'HOLLAND\\s+SOCIETY', value, re.IGNORECASE)\n   if match1:\n       return 'Holland Society'\n\n   match2 = re.search(r'SPILKERS\\s+RESTAURANT\\s+AND\\s+GRILL\\s+ROOM', value, re.IGNORECASE)\n   if match2:\n       return 'Spilker\\'s Restaurant and Grill Room'\n\n   match3 = re.search(r'\\bThe\\s+Brass\\s+Rail\\b', value, re.IGNORECASE)\n   if match3:\n       return 'The Brass Rail'\n\n   match4 = re.search(r'\\bSouthern\\s+Pacific\\b', value, re.IGNORECASE)\n   if match4:\n       return 'Southern Pacific'\n\n   match5 = re.search(r'\\bToots\\s+Shor\\b', value, re.IGNORECASE)\n   if match5:\n       return 'Toots Shor'\n\n   match6 = re.search(r'\\bHotel\\s+Belvedere\\b', value, re.IGNORECASE)\n   if match6:\n       return 'Hotel Belvedere'\n\n   match7 = re.search(r'\\bThe\\s+Biltmore\\b', value, re.IGNORECASE)\n   if match7:\n       return 'The Biltmore'\n\n   match8 = re.search(r'\\bBIRMINGHAM\\s+ALUMNI\\s+ASSOCIATION\\s+OF\\s+THE\\s+UNIVERSITY\\s+OF\\s+THE\\s+SOUTH', value, re.IGNORECASE)\n   if match8:\n       return 'Birmingham Alumni Association of the University of the South'\n\n   match9 = re.search(r'\\bThe\\s+Four\\s+Seasons\\b', value, re.IGNORECASE)\n   if match9:\n       return 'The Four Seasons'\n\n   match10 = re.search(r'\\bPark\\s+Lane\\b', value, re.IGNORECASE)\n   if match10:\n       return 'Park Lane'\n\n   match11 = re.search(r'\\bWiehl\\s+&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp\nWidman', value, re.IGNORECASE)\n   if match11:\n       return 'Wiehl & Widman'\n\n   match12 = re.search(r'\\bJohn\\s+Wanamaker\\b', value, re.IGNORECASE)\n   if match12:\n       return 'John Wanamaker'\n\n   match13 = re.search(r'\\bBATTERY\\s+PARK\\s+HOTEL', value, re.IGNORECASE)\n   if match13:\n       return 'Battery Park Hotel'\n\n   match14 = re.search(r'\\bAMEN\\s+CORNER\\s+AXE', value, re.IGNORECASE)\n   if match14:\n       return 'Amen Corner Axe'\n\n   match15 = re.search(r'\\bThe\\s+Maplewood', value, re.IGNORECASE)\n   if match15:\n       return 'The Maplewood'\n\n   match16 = re.search(r'\\bHanover\\s+Lunch', value, re.IGNORECASE)\n   if match16:\n       return 'Hanover Lunch'\n\n   match17 = re.search(r'\\bSTATLER\\'S\\s+HOTEL\\s+AND\\s+RESTAURANT', value, re.IGNORECASE)\n   if match17:\n       return 'Statler\\'s Hotel and Restaurant'\n\n   match18 = re.search(r'\\bHotel\\s+St.\\s+Regis', value, re.IGNORECASE)\n   if match18:\n       return 'Hotel St. Regis'\n\n   match19 = re.search(r'\\bTOYO\\s+KISEN\\s+KAISHA\\s+-HING\\s+KONG\\s+MARU', value, re.IGNORECASE)\n   if match19:\n       return 'Toyo Kisen Kaisha - Hing Kong Maru'\n\n   match20 = re.search(r'\\bHolland\\s+America\\s+Cruises', value, re.IGNORECASE)\n   if match20:\n       return 'Holland America Cruises'\n\n   return value  # If no match found, return the original string\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column sponsor using expression jython:import re\n   match1 = re.search(r'HOLLAND\\s+SOCIETY', value, re.IGNORECASE)\n   if match1:\n       return 'Holland Society'\n\n   match2 = re.search(r'SPILKERS\\s+RESTAURANT\\s+AND\\s+GRILL\\s+ROOM', value, re.IGNORECASE)\n   if match2:\n       return 'Spilker\\'s Restaurant and Grill Room'\n\n   match3 = re.search(r'\\bThe\\s+Brass\\s+Rail\\b', value, re.IGNORECASE)\n   if match3:\n       return 'The Brass Rail'\n\n   match4 = re.search(r'\\bSouthern\\s+Pacific\\b', value, re.IGNORECASE)\n   if match4:\n       return 'Southern Pacific'\n\n   match5 = re.search(r'\\bToots\\s+Shor\\b', value, re.IGNORECASE)\n   if match5:\n       return 'Toots Shor'\n\n   match6 = re.search(r'\\bHotel\\s+Belvedere\\b', value, re.IGNORECASE)\n   if match6:\n       return 'Hotel Belvedere'\n\n   match7 = re.search(r'\\bThe\\s+Biltmore\\b', value, re.IGNORECASE)\n   if match7:\n       return 'The Biltmore'\n\n   match8 = re.search(r'\\bBIRMINGHAM\\s+ALUMNI\\s+ASSOCIATION\\s+OF\\s+THE\\s+UNIVERSITY\\s+OF\\s+THE\\s+SOUTH', value, re.IGNORECASE)\n   if match8:\n       return 'Birmingham Alumni Association of the University of the South'\n\n   match9 = re.search(r'\\bThe\\s+Four\\s+Seasons\\b', value, re.IGNORECASE)\n   if match9:\n       return 'The Four Seasons'\n\n   match10 = re.search(r'\\bPark\\s+Lane\\b', value, re.IGNORECASE)\n   if match10:\n       return 'Park Lane'\n\n   match11 = re.search(r'\\bWiehl\\s+&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp\nWidman', value, re.IGNORECASE)\n   if match11:\n       return 'Wiehl & Widman'\n\n   match12 = re.search(r'\\bJohn\\s+Wanamaker\\b', value, re.IGNORECASE)\n   if match12:\n       return 'John Wanamaker'\n\n   match13 = re.search(r'\\bBATTERY\\s+PARK\\s+HOTEL', value, re.IGNORECASE)\n   if match13:\n       return 'Battery Park Hotel'\n\n   match14 = re.search(r'\\bAMEN\\s+CORNER\\s+AXE', value, re.IGNORECASE)\n   if match14:\n       return 'Amen Corner Axe'\n\n   match15 = re.search(r'\\bThe\\s+Maplewood', value, re.IGNORECASE)\n   if match15:\n       return 'The Maplewood'\n\n   match16 = re.search(r'\\bHanover\\s+Lunch', value, re.IGNORECASE)\n   if match16:\n       return 'Hanover Lunch'\n\n   match17 = re.search(r'\\bSTATLER\\'S\\s+HOTEL\\s+AND\\s+RESTAURANT', value, re.IGNORECASE)\n   if match17:\n       return 'Statler\\'s Hotel and Restaurant'\n\n   match18 = re.search(r'\\bHotel\\s+St.\\s+Regis', value, re.IGNORECASE)\n   if match18:\n       return 'Hotel St. Regis'\n\n   match19 = re.search(r'\\bTOYO\\s+KISEN\\s+KAISHA\\s+-HING\\s+KONG\\s+MARU', value, re.IGNORECASE)\n   if match19:\n       return 'Toyo Kisen Kaisha - Hing Kong Maru'\n\n   match20 = re.search(r'\\bHolland\\s+America\\s+Cruises', value, re.IGNORECASE)\n   if match20:\n       return 'Holland America Cruises'\n\n   return value  # If no match found, return the original string\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "sponsor",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column sponsor using expression value.toUppercase()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "sponsor",
        "expression": "jython:import re\n   if re.search(r'\\b(Breakfast|breakfast)\\b', value, re.IGNORECASE):\n      return value\n   else:\n      return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column sponsor using expression jython:import re\n   if re.search(r'\\b(Breakfast|breakfast)\\b', value, re.IGNORECASE):\n      return value\n   else:\n      return value\nreturn value"
    },
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "sponsor",
        "expression": "value",
        "edits": [
            {
                "from": [
                    "ASTOR HOUSE",
                    "THE BILTMORE"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": true
            },
            {
                "from": [
                    "HOTEL MARIE ANTOINETTE",
                    "WALDORF ASTORIA",
                    "DELMONICOS",
                    "THE PORTLAND",
                    "HEALY'S FORTY-SECOND STREET RESTAURANT",
                    "PLAZA",
                    "COLONIAL HOTEL",
                    "HOTEL BELVEDERE",
                    "TOYO KISEN KAISHA"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": false
            },
            {
                "from": [
                    "THE MOUQUIN RESTAURANT AND WINE CO.",
                    "HOLLAND SOCIETY",
                    "SUMMIT HOUSE",
                    "BIRMINGHAM ALUMNI ASSOCIATION OF THE UNIVERSITY OF THE SOUTH",
                    "R.M.S. PARTHIA",
                    "WIEHL & WIDMAN"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": null
            }
        ],
        "description": "Mass edit cells in column sponsor"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "event",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column event using expression value.toUppercase()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "event",
        "expression": "value.trim()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column event using expression value.trim()"
    },
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "event",
        "expression": "value",
        "edits": [
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            },
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": null
            }
        ],
        "description": "Mass edit cells in column event"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "event",
        "expression": "jython:import re\n\n match = re.search(r'Breakfast|breakfast', value, re.IGNORECASE)\n if match:\n    return 'Breakfast'\n elif re.search(r'Dinner|dinner', value, re.IGNORECASE):\n    return 'Dinner'\n elif re.search(r'Lunch|lunch', value, re.IGNORECASE):\n    return 'Lunch'\n elif re.search(r'Tiffin|tiffin', value, re.IGNORECASE):\n    return 'Tiffin'\n elif re.search(r'Fruhstuck|fruhstuck', value, re.IGNORECASE):\n    return 'Breakfast'  # Fruhstuck is German for breakfast\n else:\n    return 'Other'\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column event using expression jython:import re\n\n match = re.search(r'Breakfast|breakfast', value, re.IGNORECASE)\n if match:\n    return 'Breakfast'\n elif re.search(r'Dinner|dinner', value, re.IGNORECASE):\n    return 'Dinner'\n elif re.search(r'Lunch|lunch', value, re.IGNORECASE):\n    return 'Lunch'\n elif re.search(r'Tiffin|tiffin', value, re.IGNORECASE):\n    return 'Tiffin'\n elif re.search(r'Fruhstuck|fruhstuck', value, re.IGNORECASE):\n    return 'Breakfast'  # Fruhstuck is German for breakfast\n else:\n    return 'Other'\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "event",
        "expression": "jython:import re\n\nmatch = re.search(r'(?i)(breakfast|dinner|tiffin|lunch|thanksgiving dinner|annual banquet)', value)\nif match:\n    return match.group(0).lower()\nelse:\n    return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column event using expression jython:import re\n\nmatch = re.search(r'(?i)(breakfast|dinner|tiffin|lunch|thanksgiving dinner|annual banquet)', value)\nif match:\n    return match.group(0).lower()\nelse:\n    return value\nreturn value"
    }
]