[
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "occasion",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column occasion using expression value.toUppercase()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "occasion",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column occasion using expression value.toUppercase()"
    },
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "occasion",
        "expression": "value",
        "edits": [
            {
                "from": [
                    "DAILY;",
                    "?",
                    "OTHER (DAILY);"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Daily"
            },
            {
                "from": [
                    "ANNUAL"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Annual"
            },
            {
                "from": [
                    "RELIGIOUS HOLIDAY"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Religious Holiday"
            },
            {
                "from": [
                    "SECULAR HOLIDAY"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Secular Holiday"
            },
            {
                "from": [
                    "COMPLIMENTARY/TESTIMONIAL"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Complimentary/Testimonial"
            },
            {
                "from": [
                    "ANNIVERSARYERSARY"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Anniversary"
            }
        ],
        "description": "Mass edit cells in column occasion"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "occasion",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column occasion using expression value.toUppercase()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "occasion",
        "expression": "value.toNumber()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column occasion using expression value.toNumber()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "occasion",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column occasion using expression value.toUppercase()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "event",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column event using expression value.toUppercase()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "event",
        "expression": "jython:import re\n   if re.search(r'(LUNCH|DINNER)', value):\n       if re.search(r'\\s+AND\\s+', value):\n           return re.sub(r'\\s+AND\\s+', ' & ', value)\n       elif re.search(r'(\\[.*\\]|\\.;:)', value):\n           return re.sub(r'[\\[\\];:\\.]', '', value)\n       else:\n           return value\n   elif re.search(r'(BREAKFAST|LUNCHEON|PERSONALLY CONDUCTED TOUR THROUGH MEXICO & CALIFORNIA)', value):\n       if re.search(r'\\s+AND\\s+', value):\n           return re.sub(r'\\s+AND\\s+', ' & ', value)\n       elif re.search(r'(\\[.*\\]|\\.;:)', value):\n           return re.sub(r'[\\[\\];:\\.]', '', value)\n       else:\n           return value\n   elif re.search(r'(PRIVATE BANQUET|11TH ANNUAL BANQUET|4TH ANNUSL DINNER)', value):\n       if re.search(r'\\s+AND\\s+', value):\n           return re.sub(r'\\s+AND\\s+', ' & ', value)\n       elif re.search(r'(\\[.*\\]|\\.;:)', value):\n           return re.sub(r'[\\[\\];:\\.]', '', value)\n       else:\n           return value\n   else:\n       return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column event using expression jython:import re\n   if re.search(r'(LUNCH|DINNER)', value):\n       if re.search(r'\\s+AND\\s+', value):\n           return re.sub(r'\\s+AND\\s+', ' & ', value)\n       elif re.search(r'(\\[.*\\]|\\.;:)', value):\n           return re.sub(r'[\\[\\];:\\.]', '', value)\n       else:\n           return value\n   elif re.search(r'(BREAKFAST|LUNCHEON|PERSONALLY CONDUCTED TOUR THROUGH MEXICO & CALIFORNIA)', value):\n       if re.search(r'\\s+AND\\s+', value):\n           return re.sub(r'\\s+AND\\s+', ' & ', value)\n       elif re.search(r'(\\[.*\\]|\\.;:)', value):\n           return re.sub(r'[\\[\\];:\\.]', '', value)\n       else:\n           return value\n   elif re.search(r'(PRIVATE BANQUET|11TH ANNUAL BANQUET|4TH ANNUSL DINNER)', value):\n       if re.search(r'\\s+AND\\s+', value):\n           return re.sub(r'\\s+AND\\s+', ' & ', value)\n       elif re.search(r'(\\[.*\\]|\\.;:)', value):\n           return re.sub(r'[\\[\\];:\\.]', '', value)\n       else:\n           return value\n   else:\n       return value\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "event",
        "expression": "jython:import re\\nvalue = value.lower()\\nreturn value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column event using expression jython:import re\\nvalue = value.lower()\\nreturn value\nreturn value"
    }
]