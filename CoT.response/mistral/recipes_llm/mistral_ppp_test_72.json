[
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Zip",
        "expression": "value.toNumber()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column Zip using expression value.toNumber()"
    },
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Zip",
        "expression": "value",
        "edits": [
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": "LoanAmount"
            }
        ],
        "description": "Mass edit cells in column Zip"
    },
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Zip",
        "expression": "value",
        "edits": [
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": "0"
            }
        ],
        "description": "Mass edit cells in column Zip"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "DateApproved",
        "expression": "value.toDate()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column DateApproved using expression value.toDate()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "DateApproved",
        "expression": "value.toString()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column DateApproved using expression value.toString()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Lender",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column Lender using expression value.toUppercase()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Lender",
        "expression": "jython:import re\n   if re.search(r'\\s', value):\n      value = value.strip()\n   if re.search(r'BANK OF HAWAII', value, re.IGNORECASE):\n      return 'Bank of Hawaii'\n   elif re.search(r'bank of hawaii', value, re.IGNORECASE):\n      return 'Bank of Hawaii'\n   elif re.search(r'bofh', value, re.IGNORECASE):\n      return 'Bank of Hawaii'\n   elif re.search(r'CENTRAL PACIFIC BANK', value, re.IGNORECASE):\n      return 'Central Pacific Bank'\n   elif re.search(r'cpb', value, re.IGNORECASE):\n      return 'Central Pacific Bank'\n   elif re.search(r'AMERICAN SAVINGS BANK, FSB', value, re.IGNORECASE):\n      return 'American Savings Bank (First State Bank)'\n   elif re.search(r'asb', value, re.IGNORECASE):\n      return 'American Savings Bank (First State Bank)'\n   elif re.search(r'FIRST HAWAIIAN BANK', value, re.IGNORECASE):\n      return 'First Hawaiian Bank'\n   elif re.search(r'fhb', value, re.IGNORECASE):\n      return 'First Hawaiian Bank'\n   elif re.search(r'HAWAII NATIONAL BANK', value, re.IGNORECASE):\n      return 'Hawaii National Bank'\n   elif re.search(r'celtic bank corporation', value, re.IGNORECASE):\n      return 'Celtic Bank Corporation'\n   elif re.search(r'hawaiiusa fcu', value, re.IGNORECASE):\n      return 'HawaiiUSA FCU'\n   else:\n      return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column Lender using expression jython:import re\n   if re.search(r'\\s', value):\n      value = value.strip()\n   if re.search(r'BANK OF HAWAII', value, re.IGNORECASE):\n      return 'Bank of Hawaii'\n   elif re.search(r'bank of hawaii', value, re.IGNORECASE):\n      return 'Bank of Hawaii'\n   elif re.search(r'bofh', value, re.IGNORECASE):\n      return 'Bank of Hawaii'\n   elif re.search(r'CENTRAL PACIFIC BANK', value, re.IGNORECASE):\n      return 'Central Pacific Bank'\n   elif re.search(r'cpb', value, re.IGNORECASE):\n      return 'Central Pacific Bank'\n   elif re.search(r'AMERICAN SAVINGS BANK, FSB', value, re.IGNORECASE):\n      return 'American Savings Bank (First State Bank)'\n   elif re.search(r'asb', value, re.IGNORECASE):\n      return 'American Savings Bank (First State Bank)'\n   elif re.search(r'FIRST HAWAIIAN BANK', value, re.IGNORECASE):\n      return 'First Hawaiian Bank'\n   elif re.search(r'fhb', value, re.IGNORECASE):\n      return 'First Hawaiian Bank'\n   elif re.search(r'HAWAII NATIONAL BANK', value, re.IGNORECASE):\n      return 'Hawaii National Bank'\n   elif re.search(r'celtic bank corporation', value, re.IGNORECASE):\n      return 'Celtic Bank Corporation'\n   elif re.search(r'hawaiiusa fcu', value, re.IGNORECASE):\n      return 'HawaiiUSA FCU'\n   else:\n      return value\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Lender",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column Lender using expression value.toUppercase()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Lender",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column Lender using expression value.toUppercase()"
    },
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "CD",
        "expression": "value",
        "edits": [
            {
                "from": [
                    "CD"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Unknown"
            }
        ],
        "description": "Mass edit cells in column CD"
    }
]