[
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "RaceEthnicity",
        "expression": "jython:import re\nmatch = re.search(r'[A-Za-z]+', value)\nif match:\n    value = match.group(0).lower()\n    if value == 'unanswered':\n        return value\n    elif value == 'asian':\n        return 'Asian'\n    elif value == 'black or african american':\n        return 'Black or African American'\n    elif value == 'white':\n        return 'White'\n    elif value == 'unknown':\n        return 'Unknown'\nelse:\n    return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column RaceEthnicity using expression jython:import re\nmatch = re.search(r'[A-Za-z]+', value)\nif match:\n    value = match.group(0).lower()\n    if value == 'unanswered':\n        return value\n    elif value == 'asian':\n        return 'Asian'\n    elif value == 'black or african american':\n        return 'Black or African American'\n    elif value == 'white':\n        return 'White'\n    elif value == 'unknown':\n        return 'Unknown'\nelse:\n    return value\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "RaceEthnicity",
        "expression": "value.trim()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column RaceEthnicity using expression value.trim()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "RaceEthnicity",
        "expression": "jython:import re\n   if value.lower() == \"unanswered\":\n       return None\n   elif value.lower() in [\"asian\", \"asian\"]:\n       return \"Asian\"\n   elif value.lower() in [\"white\", \"caucasian\"]:\n       return \"White\"\n   elif value.lower() == \"black\":\n       return \"Black\"\n   elif value.lower() == \"unknown\":\n       return \"Unknown\"\n   else:\n       match = re.search(r'\\s+', value)\n       if match:\n           return value.replace(\" \", \"\").lower()\n       else:\n           return value.lower()\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column RaceEthnicity using expression jython:import re\n   if value.lower() == \"unanswered\":\n       return None\n   elif value.lower() in [\"asian\", \"asian\"]:\n       return \"Asian\"\n   elif value.lower() in [\"white\", \"caucasian\"]:\n       return \"White\"\n   elif value.lower() == \"black\":\n       return \"Black\"\n   elif value.lower() == \"unknown\":\n       return \"Unknown\"\n   else:\n       match = re.search(r'\\s+', value)\n       if match:\n           return value.replace(\" \", \"\").lower()\n       else:\n           return value.lower()\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "RaceEthnicity",
        "expression": "jython:import re\n\nmatch = re.search(r'[a-z]', value, re.IGNORECASE)\nif match:\n    if match.group(0).lower() == 'unknown':\n        return 'Unknown'\n    elif match.group(0).lower() == 'unanswered':\n        return 'Unanswered'\n    else:\n        return value.title()\nelse:\n    return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column RaceEthnicity using expression jython:import re\n\nmatch = re.search(r'[a-z]', value, re.IGNORECASE)\nif match:\n    if match.group(0).lower() == 'unknown':\n        return 'Unknown'\n    elif match.group(0).lower() == 'unanswered':\n        return 'Unanswered'\n    else:\n        return value.title()\nelse:\n    return value\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "RaceEthnicity",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column RaceEthnicity using expression value.toUppercase()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "RaceEthnicity",
        "expression": "jython:import re\n   if value.lower() == 'asian' or value.lower() == 'unknown' or value.lower() == 'unanswered':\n       return value\n   elif re.search(r'Asi[a-z]?n', value):\n       return 'Asian'\n   else:\n       return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column RaceEthnicity using expression jython:import re\n   if value.lower() == 'asian' or value.lower() == 'unknown' or value.lower() == 'unanswered':\n       return value\n   elif re.search(r'Asi[a-z]?n', value):\n       return 'Asian'\n   else:\n       return value\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "RaceEthnicity",
        "expression": "jython:import re\n   map = {'ASIAN': 'Asian', 'WHITE': 'White', 'BLACK': 'Black', 'UNKNOWN': 'Unknown', 'UNANSWERED': None}\n   value = value.lower()\n   if value in map:\n       return map[value]\n   elif re.search(r'\\bun\\w*\\b', value):\n       return map[value.replace('un', '').capitalize()]\n   else:\n       return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column RaceEthnicity using expression jython:import re\n   map = {'ASIAN': 'Asian', 'WHITE': 'White', 'BLACK': 'Black', 'UNKNOWN': 'Unknown', 'UNANSWERED': None}\n   value = value.lower()\n   if value in map:\n       return map[value]\n   elif re.search(r'\\bun\\w*\\b', value):\n       return map[value.replace('un', '').capitalize()]\n   else:\n       return value\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "RaceEthnicity",
        "expression": "jython:import re\n   if value.lower() in ['unanswered', 'unknown']:\n       return value.capitalize()\n   elif value.lower() in ['white', 'black']:\n       return value.upper()\n   elif value == \"asian\":\n       return \"Asian\"\n   else:\n       return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column RaceEthnicity using expression jython:import re\n   if value.lower() in ['unanswered', 'unknown']:\n       return value.capitalize()\n   elif value.lower() in ['white', 'black']:\n       return value.upper()\n   elif value == \"asian\":\n       return \"Asian\"\n   else:\n       return value\nreturn value"
    },
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "RaceEthnicity",
        "expression": "value",
        "edits": [
            {
                "from": [
                    "UNKNOWN"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Unknown"
            },
            {
                "from": [
                    "UNANSWERED"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Unanswered"
            }
        ],
        "description": "Mass edit cells in column RaceEthnicity"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "LoanAmount",
        "expression": "value.toNumber()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column LoanAmount using expression value.toNumber()"
    }
]