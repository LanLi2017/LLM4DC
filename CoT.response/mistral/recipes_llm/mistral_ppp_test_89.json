[
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "City",
        "expression": "value.trim()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column City using expression value.trim()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "City",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column City using expression value.toUppercase()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "City",
        "expression": "jython:import re\n   match = re.search(r'[A-Za-z]+', value)\n   if match:\n       return None\n   elif value.isdigit():\n       return float(value)\n   else:\n       standard_values = {'thousand': 1000, 'million': 1000000, 'billion': 1000000000}\n       for key, value in standard_values.items():\n           if key in value.lower():\n               amount = re.search(r'\\d+', value)\n               if amount:\n                   return float(amount.group(0)) * value\n   return None\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column City using expression jython:import re\n   match = re.search(r'[A-Za-z]+', value)\n   if match:\n       return None\n   elif value.isdigit():\n       return float(value)\n   else:\n       standard_values = {'thousand': 1000, 'million': 1000000, 'billion': 1000000000}\n       for key, value in standard_values.items():\n           if key in value.lower():\n               amount = re.search(r'\\d+', value)\n               if amount:\n                   return float(amount.group(0)) * value\n   return None\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "City",
        "expression": "jython:import re\n   if re.search(r'[A-Z]+', value):\n      return value.lower()\n   elif re.search(r'\\s+', value):\n      return value.replace(' ', '_')\n   elif len(value) > 4 and value[-4:] != '_':\n      return value + '_'\n   else:\n      return value\nreturn value",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column City using expression jython:import re\n   if re.search(r'[A-Z]+', value):\n      return value.lower()\n   elif re.search(r'\\s+', value):\n      return value.replace(' ', '_')\n   elif len(value) > 4 and value[-4:] != '_':\n      return value + '_'\n   else:\n      return value\nreturn value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "City",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column City using expression value.toUppercase()"
    },
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "City",
        "expression": "value",
        "edits": [
            {
                "from": [
                    "KAILUA KONA",
                    "KAILUA"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Kailua-Kona"
            },
            {
                "from": [
                    "HOLUALOA"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Holualoa"
            },
            {
                "from": [
                    "LIHUE"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Lihue"
            },
            {
                "from": [
                    "HONOLULU",
                    "HONOLULULULU",
                    "HONOLULULU"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Honolulu"
            },
            {
                "from": [
                    "KANEOHE"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Kaneohe"
            },
            {
                "from": [
                    "CHICAGOO"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Chicago"
            },
            {
                "from": [
                    "AIEA"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Aiea"
            },
            {
                "from": [
                    "HILO"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Hilo"
            },
            {
                "from": [
                    "KALAHEO",
                    "KALAHEO"
                ],
                "fromBlank": false,
                "fromError": false,
                "to": "Kalaheo"
            }
        ],
        "description": "Mass edit cells in column City"
    },
    {
        "op": "core/mass-edit",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "City",
        "expression": "value",
        "edits": [
            {
                "from": [],
                "fromBlank": false,
                "fromError": false,
                "to": ""
            }
        ],
        "description": "Mass edit cells in column City"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "State",
        "expression": "value.toUppercase()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column State using expression value.toUppercase()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Zip",
        "expression": "value.toNumber()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column Zip using expression value.toNumber()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "LoanAmount",
        "expression": "value.toNumber()",
        "onError": "set-to-blank",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column LoanAmount using expression value.toNumber()"
    }
]