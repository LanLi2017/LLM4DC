This instruction is to teach how to generate a chain of operations (a.k.a., data cleaning workflow) to address the given data cleaning purpose. 
Note:
1. Operation Chain is a list, the order is the execution order of the selected operations.
2. Correlation exists between previous and current operations. The chosing of current operation depends on how the previous operation modifies the table.
3. Full Operation Chain will be ended if True is executed.


Here are example operation chains to address the data cleaning Purpose.

Examples 
/*
col : id | neighbourhood      | room_type  | price 
row 1 : 46154    | OHare      | Entire home/apt     | 65
row 2 : 6715     | OHARE      | Entire home/apt     | 255 
row 3 : 228273   | ohare    | Private room        | 109
*/
Purpose: Return room types that are located near OHare.
Operation Chain: ```[uppercase, True]```
Explanations:
1. uppercase on column "neighbourhood" (string type) to standardize the cell values;
2. End the full chain: True.

/*
col : id | neighbourhood      | room_type  | price 
row 1 : 46154    | OHare      | Entire home/apt     | 65
row 2 : 6715     | OHARE      | Entire home/apt     | 255 
row 3 : 228273   | O?Hare     | Private room        | 109
row 4 : 22820    | ohare      |                     | 120
row 5 : 12890    | O'Haree    | Private room        | 309
*/
Purpose: Return room types that are located near OHare.
Operation Chain: ```[uppercase, mass_edit, True]```
Explanations:
1. uppercase on column "neighbourhood" (string type) to standardize the cell values;
2. mass_edit on column "neighbourhood" to repair the spellings;
3. End the full chain: True.

/*
col : Code | City     | State  | Zip 
row 1 : 334444   | Chicago  | IL     | 60611
row 2 : 120      | urbana   | IL     | 61802
row 3 : 100000   | Chicagoo | IL     | 
row 4 : 1000.    | CHICAGO  | IL     | 60611
row 5 : 103420   | CHICAGO  | IL     | 
*/
Purpose: Return the city name that the most loan amount are from.
Operation Chain: ```[numeric, uppercase, mass_edit, reorder_rows, True]```
Explanations: 
1. numeric on column "LoanAmount" (data type: Integer) to convert data into numerical type;
2. uppercase on column "City" to standardize the spellings;
3. mass_edit on column "City" to correct the spellings;
4. reorder_rows on "LoanAmount" to find the "most" number;
5. End the full chain: True.


/*
col : ISO/IEC Standard | Status | WG
row 1 : ISO/IEC TR 19759 | Published (2005) | 20
row 2 : ISO/IEC 15288 | Published (2008) | 7
row 3 : ISO/IEC 12207 | Published (2011) | 7
*/
Purpose: what is the number of standards published in 2011?
Operation Chain: ```[split_column, add_column, regexr_transform, numeric, True]```
Explanations: 
1. split_column on "Status" with separator " " to extract year information: two new columns: ["Status 1","Status 2"] are generated;
2. add_column: add a new column "Year" based on "Status 2" by copying the values;
3. regexr_transform on "Year", to parse the pattern "\((\d{4})\)" and return the number only;
4. numeric on "Year", because the data type is number, so use numeric to parse the data into correct data type.
5. End the full chain: True.


/*
col : ISO/IEC Standard | Publish Date | WG
row 1 : ISO/IEC TR 19759 | 2005.10.04 | 20
row 2 : ISO/IEC 15288    | 09/14/2008 | 7
row 3 : ISO/IEC 12207.   | 2009-10-12 | 7
*/
Purpose: what is the most frequent publish date?
Operation Chain: ```[date, True]```
Explanations:
1. date on column "Publish Date" to parse the date of time into ISO format
2. End the full chain: True.