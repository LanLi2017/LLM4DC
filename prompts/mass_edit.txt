mass_edit() is an operation repairing a list of wrong values with one new cell value through value replacements. For each replacement: all old cell values (from original dataset) are replaced with one single new value(from old dataset or properly inferred or generated by you) on provided column name.
The structure of the **edits** in a list of dictionaries and without any comments:  
[{'from':[list_of_incorrect_strings], 'to':a_correct_version_string}, {other edits}, ...]
- 'from': A list of UNIQUE strings that represent the incorrect values or variations of a name. values in from list SHOULD ONLY come from the target column.
- 'to': A SINGLE string that indicates the correct version of the value, which the incorrect values should be transformed into.

To return a high quality edits for replacement instead of replacing the data with Wrong values and messier the dataset:
1. Very strong evidence that those cell values in 'from' should be aggregated, their semantics are the same
2. Very strong evidence that the value in "to" is the BEST to replace all the old values.
3. The value of 'to' could be derived from this target column or it could be determined across the columns.

Here are examples of edits prediction for operation mass_edit().

Examples:

/*
col :   City     | State  | Zip 
row 1 : Hon      | HI     | 96814
row 2 : HONOLULU | HI     | 96814 
row 3 : Honolulu | HI     | 96814
row 4 : CHI      | IL     | 60611
row 5 : urbanana | IL     | 61802
row 6 : Chicagoo | IL     | 
*/
Purpose: Return how many cities are in the table.
Current Operation Purpose: The data has accuracy and conciseness concerns, including incorrect values in the "City" column, which prevent it from meeting all data quality criteria.
edits: ```[{'from': ['Hon', 'HONOLULU'], 'to': 'Honolulu'}, {'from': ['CHI', 'Chicagoo'], 'to': 'Chicago'}, {'from': ['urbana'], 'to': 'Urbana'}]```
Explanation: {'from': ['Hon', 'HONOLULU'], 'to': 'Honolulu'}: 'Hon' at row 1, 'HONOLULU'at row 2 should be the same as 'Honolulu'.{'from': ['CHI', 'Chicagoo'], 'to': 'Chicago'}: 'CHI' at row 4, 'Chicagoo' at row 6 should be repaired as Chicago; {'from': ['urbana'], 'to': 'Urbana'} : based on the zipcode 61802 and the state IL,'urbanana' is wrong and should be repaired as urbana .
Output: Honolulu | Honolulu | Honolulu | Chicago | urbana | Chicago


/*
col : neighbourhood|  room_type    
row 1 : OHare      | Entire home/apt 
row 2 : OHARE      | Entire home/apt  
row 3 : O?Hare     | Private room   
*/

Purpose: Return how many differnt types of rooms are located near OHare.
Current Operation Purpose: The data has accuracy concerns, including invalid characters exist in the cell values in the "City" column, which prevent it from meeting all data quality criteria.
edits: ```[{'from': ['OHAER', 'O?HARE'], 'to': 'OHare'}]```
Explanation: {'from': ['OHAER', 'O?HARE'], 'to': 'OHare'}: 'OHAER', 'O?HARE' should be the same as 'OHare'.
Output: OHare | OHare | OHare


/*
col :  orcid   |Name         |H-index      
row 1 : 1001   |Jinde Cao    |300,00
row 2 : 1002   |Jin Li Li.   |23000
row 3 : 1002   |Jin Li       |23,000
row 4 : 1004   |Zhu Han 韩   |6000
*/
Purpose: Return researcher's name who has the most H-index.
Current Operation Purpose: The data has accuracy concerns, cell values on column "Name" include both English and non-English (e.g., Chinese) components, which prevent it from meeting all data quality criteria.
edits: ```[{'from': ['Jin Li Li.', 'Jin Li'], 'to': 'Jin Li'}, {'from': ['Zhu Han 韩'], 'to': 'Zhu Han'}]```
Explanation: {'from': ['Jin Li Li.', 'Jin Li'], 'to': 'Jin Li'}: 'Jin Li Li.' at row 2, 'Jin Li' at row 3 share the same orcid ->  replace them into the same spelling 'Jin Li'. {'from': ['Zhu Han 韩'], 'to': 'Zhu Han'}: replace 'Zhu Han 韩' with 'Zhu Han' removing the chinese characters.
Output: Jinde Cao | Jin Li | Jin Li | Zhu Han 

/*
col :  City            | Zipcode  | State
row 1 : New york city  | 10001    | NY
row 2 : Boston         | 02108    | MA
row 3 :                | 02112    | MA
row 4 : Chicago        | 60604    | IL
row 5 : Champaign      | 60607    | IL
row 6 : Chicagoo       | 60601    | IL
*/
Purpose: Return how many cities are in the table.
Current Operation Purpose: The data has accuracy and conciseness concerns, including incorrect values in the "City" column, which prevent it from meeting all data quality criteria.
edits: ```[{'from': [''], 'to': 'Boston'}, {'from': ['Chicagoo'], 'to': 'Chicagoo'}, {'from': ['Champaign'], 'to': 'Chicago'}]```
Explanation: {'from': [''], 'to': 'Boston'}: State is MA, and Zipcode is 02112 -> city should be Boston;  {'from': ['Chicagoo'], 'to': 'Chicagoo'}: State is IL, Zipcode is 60601, the city should be Chicago; {'from': ['Champaign'], 'to': 'Chicago'}: State is IL, Zipcode is 60607, so the city should be Chicago
Output: New york city | Boston | Boston | Chicago | Chicago | Chicago 