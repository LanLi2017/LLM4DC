upper: The upper function is used to convert all cell values in a column that are strings into uppercase. This is particularly useful for standardizing data, especially when dealing with categorical variables, to ensure consistency in text representation. Standardizing case can help avoid issues with duplicate entries that differ only in capitalization.

Examples
/*
col : id | neighbourhood      | room_type  | price 
row 1 : 46154    | OHare      | Entire home/apt     | 65
row 2 : 6715     | OHARE      | Entire home/apt     | 255 
row 3 : 228273   | ohare    | Private room        | 109
*/
Purpose: Return room types that are located near OHare.
Current Operation Purpose: The dataset has accuracy concerns, especially with formatting issues. which prevent it from meeting all the quality dimensions checking.
Expression: ```value.toUppercase()```
Explanation: The purpose asks about neighbourhood of OHare, which are in string data type. We use upper on column "neighbourhood" (string type) to standardize the cell values.
Output: OHARE | OHARE | OHARE


/*
col : code | county | former province | area (km2) | population; census 2009 | capital
row 1 : 1 | mombasA | coast | 212.5 | 939,370 | mombasa (city)
row 2 : 2 | Kwale | coast | 8,270.3 | 649,931 | kwale
row 3 : 3 | KILIFI| coast | 12,245.9 | 1,109,735 | kilifi
*/
Purpose: Figure out how many counties are recorded in total.
Current Operation Purpose: The dataset has accuracy and conciseness concerns, including formatting issues, and spelling variations in the "county" column, which prevent it from meeting all data quality criteria.
Expression: ```value.toUppercase()```
Explanation: "value.toUppercase()" can transform all the cell value in "county" to uppercase to improve the format consistency and accuracy finally.
Output: MOMBASA | KWALE | KILIFI